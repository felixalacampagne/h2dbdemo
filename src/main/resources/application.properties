# Based on https://www.baeldung.com/spring-boot-h2-database

# this uses a file based DB which persists between invocations: ;IFEXISTS=TRUE may prevent recreation
# and apparently must be a path spec, just a name by itself appears to result in weird errors
# Probably best to dedicate a directory to the db as multiple files are created. Don't add an
# extension as the created files have an extension added
spring.datasource.url=jdbc:h2:file:./db/testfiledb;DB_CLOSE_DELAY=-1

# seems to be required for file db: 'update' will preserve the file db, create-drop needed to run tests with file db.
# should probably be disabled for 'production'
spring.jpa.hibernate.ddl-auto=create-drop


spring.datasource.name=testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# this is the default
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# never: prevents db init from data.sql
spring.sql.init.mode=never

# required when init from data.sql
spring.jpa.defer-datasource-initialization=true

# gives a clue as to what is going on under the hood
spring.jpa.show-sql=true


# Start the H2 console: use http://localhost:8080/h2-console to access it
# WARNING: requires spring-boot-starter-web in pom although baeldung does not mention this...
spring.h2.console.enabled=true
server.port=8080
server.servlet.context-path=
